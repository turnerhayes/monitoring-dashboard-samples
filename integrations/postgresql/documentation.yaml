exporter_type: sidecar
app_name_short: PostgreSQL
app_name: {{app_name_short}}
app_site_name: PostgreSQL
app_site_url: https://www.postgresql.org/
exporter_name: the PostgreSQL exporter
exporter_pkg_name: postgres_exporter
exporter_repo_url: https://github.com/prometheus-community/postgres_exporter
dashboard_available: true
minimum_exporter_version: v0.11.1
multiple_dashboards: false
dashboard_display_name: {{app_name_short}} Prometheus Overview
config_mods: |
  apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    name: postgresql
  spec:
    serviceName: postgresql
    selector:
      matchLabels:
  +     app.kubernetes.io/name: postgresql
    template:
      metadata:
        labels:
  +       app.kubernetes.io/name: postgresql
      spec:
        containers:
        - image: postgres:14.0
          name: postgresql
          env:
          - name: POSTGRES_USER
            value: root
          - name: POSTGRES_PASSWORD
            value: password
          - name: POSTGRES_DB
            value: dev
  +     - name: exporter
  +       image: quay.io/prometheuscommunity/postgres-exporter:v0.11.1
  +       env:
  +       - name: DATA_SOURCE_NAME
  +         value: postgresql://root:password@localhost:5432/dev?sslmode=disable
  +       ports:
  +       - containerPort: 9187
  +         name: prometheus
podmonitoring_config: |
  apiVersion: monitoring.googleapis.com/v1
  kind: PodMonitoring
  metadata:
    name: postgresql
    labels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/part-of: google-cloud-managed-prometheus
  spec:
    endpoints:
    - port: prometheus
      scheme: http
      interval: 60s
      path: /metrics
    selector:
      matchLabels:
        app.kubernetes.io/name: postgresql
additional_prereq_info: |
  See the [running as non superuser](https://github.com/prometheus-community/postgres_exporter#running-as-non-superuser){:class=external}
  documentation for instructions on creating a least privilege user.
additional_install_info: |
  Update the `DATA_SOURCE_NAME` environment variable with credentials that work with your {{app_name}} instance.
sample_promql_query: up{job="postgresql", cluster="{{cluster_name}}", namespace="{{namespace_name}}"}
